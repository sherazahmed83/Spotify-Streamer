buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.robolectric:robolectric-gradle-plugin:1.1.0'
    }
}


apply plugin: 'com.android.application'
apply plugin: 'org.robolectric'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.0"

    defaultConfig {
        applicationId "com.spotifystreamer.app"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

}


repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile(name:'spotify-web-api-android-0.1.0', ext:'aar')
    compile 'com.spotify.sdk:spotify-player:1.0.0-beta10@aar'
    compile 'com.spotify.sdk:spotify-auth:1.0.0-beta10@aar'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.okhttp:okhttp:2.2.0'
    compile 'com.squareup.picasso:picasso:2.5.2'

    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.android.support:support-v4:22.2.0'

}

/* jacoco {`./gradlew check` generates report `build/reports/jacoco` } */
apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.7.1.201405082137"
}

def coverageSourceDirs = ['src/main/java' ]

task jacocoTestReport(type:JacocoReport, dependsOn: "testDebug") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: 'build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('build/jacoco/jacoco.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }

}
check.dependsOn jacocoTestReport
/* !jacoco */